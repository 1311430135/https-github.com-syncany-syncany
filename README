SIMPLE SETUP GUIDE, as of 2 Sep 2013
For branch: https://code.launchpad.net/~syncany-team/syncany/core2

Setup Eclipse and build
--------------------------------------------------------------------------------
1. Be sure to install Bazaar (bzr), Ivy and Ant won your system
   On Debian-based systems: $ apt-get install bzr ivy ant
   
2. Open Eclipse and create a new workplace, 
   e.g. at "/home/user/workplace"

3. Checkout Syncany on the command line
   $ cd /home/user/workplace
   $ bzr branch lp:~syncany-team/syncany/core2
   $ mv core2 SyncanyCore                        <<< Important!
   
4. In Eclipse, go to Help -> Install New Software -> Add ...
   Location: http://www.apache.org/dist/ant/ivyde/updatesite
   
5. Install plugin "Apache Ivy library" and "Apache IvyDE" 

6. In Eclipse, go to File -> Import ... -> Existing Projects Into Workplace
   -> Select Root Directory -> Select "/home/user/workplace/SyncanyCore"

7. Add ivy.xml to Ivy Library:
   Right-click on ivy.xml -> Add Ivy Library...

8. Add ivysettings.xml to Ivy settings path:
   Windows -> Preferences -> Ivy -> Settings ... Chose "Workspace..." 
   below "Ivy settings path:" and add the ivysettings.xml within the workspace

9. Run the build.xml as Ant Build


Build on command line
--------------------------------------------------------------------------------
1. Install Ant and Ivy: $ apt-get install ant ivy   
2. Compile: $ ant   


Run Syncany
--------------------------------------------------------------------------------
$ java -jar SyncanyCore.jar up
  Performs up operation (deduplicate, index, and upload)
  
$ java -jar SyncanyCore.jar down
  Performs down operation (retrieve and apply changes, resolve conflicts)
    

Run in "sandbox"
--------------------------------------------------------------------------------
The 'sandbox' folder contains a few tiny scripts to test
the Syncany up and down operations. The 'run.sh' script
can be used to run Syncany on different machines ("A" 
and "B"). 

cd sandbox
vi configA.json (optional)
vi configB.json (optional)
./reset.sh
./run.sh A up
./run.sh B down

or to run down/up every 5 seconds (for test):

./loop.sh A
./loop.sh B (in another terminal window)
