#!bash
# 
# Syncany Bash Completion
# =======================
# 
# Bash completion support for [Syncany](https://www.syncany.org/).
# 
# The script is inspired by the BZR/Bazaar bash completion script 
# available at https://launchpad.net/bzr-bash-completion
# 
# Installation
# ------------
# 
# 1. Place it in a `bash-completion.d` folder:
# 
#   * /etc/bash-completion.d
#   * /usr/local/etc/bash-completion.d
#   * ~/bash-completion.d
# 
# 2. Open new bash, and type `sy [TAB][TAB]`
# 
# Documentation
# -------------
# The script is called by bash whenever [TAB] or [TAB][TAB] is pressed after 
# 'sy (..)'. By reading entered command line parameters, it determines possible
# bash completions and writes them to the COMPREPLY variable. Bash then 
# completes the user input if only one entry is listed in the variable or
# shows the options if more than one is listed in COMPREPLY.
#
# The script first determines the current parameter ($cur), the previous 
# parameter ($prev), the first word ($firstword) and the last word ($lastword).
# Using the $firstword variable (= the command) and a giant switch/case, 
# completions are written to $complete_words and $complete_options. 
#
# If the current user input ($cur) starts with '-', only $command_options are 
# displayed/completed, otherwise only $command_words.
#

shopt -s progcomp
_syncany ()
{
	local cur prev firstword lastword complete_words complete_options

	COMPREPLY=()

	cur=${COMP_WORDS[COMP_CWORD]}
	prev=${COMP_WORDS[COMP_CWORD-1]}
	firstword=$(_sy_get_firstword)
	lastword=$(_sy_get_lastword)

	PLUGINS='\
		local\
		webdav\
		sftp\
		ftp\
		samba\
		simpleweb\
		s3'

	CONFLICT_STRATEGIES='\
		ask\
		rename'

	# Un-comment this for debug purposes:
	#   echo -e "\nprev = $prev, cur = $cur, firstword = $firstword, lastword = $lastword\n"

	case "${firstword}" in
	cleanup)
		complete_options='\
			-M --no-database-merge\
			-V --no-version-remove\
			-k --keep-versions\
			-f --force-checksum'
		;;

	connect)
		case "${prev}" in
			--plugin|-P) 
				complete_words="$PLUGINS"
				;;

			*)
				complete_options='\
					-P --plugin\
					-o --plugin-option\
					-I --no-interaction\
					-N --no-daemon'
				;;
		esac
		;;

	down)
		case "${prev}" in
			--conflict-strategy|-C) 
				complete_words="$CONFLICT_STRATEGIES"
				;;

			*)
				complete_options='\
					-C --conflict-strategy\
					-A --no-apply'
				;;	
		esac
		;;

	genlink)
		complete_options='\
			-s --short'
		;;

	init)
		case "${prev}" in
			--plugin|-P) 
				complete_words="$PLUGINS"
				;;

			*)
				complete_options='\
					-P --plugin\
					-o --plugin-option\
					-E --no-encryption\
					-G --no-compression\
					-t --create-target\
					-a --advanced\
					-I --no-interaction\
					-N --no-daemon'
				;;
		esac
		;;
		
	ls)
		case "${prev}" in
			--types|-t) 
				complete_words='\
					t\
					d\
					f'
				;;

			*)
				complete_options='\
					-V --versions\
					-t --types\
					-D --date\
					-r --recursive\
					-f --full-checksums\
					-g --group'
				;;
		esac
		;;

	ls-remote)
		;;

	plugin)
		case "${lastword}" in
		list) 
			complete_options='\
				-R --remote-only\
				-L --local-only\
				-s --snapshots'

			;;
		install) 
			complete_words="$PLUGINS"
			complete_options='\
				-s --snapshot'

			;;

		remove) 
			complete_words="$PLUGINS"
			;;

		*) 
			complete_words='\
				list\
				install\
				remove'
			;;
		esac
		;;
	
	restore)
		case "${prev}" in
			--target|-t)
				COMPREPLY=( $( compgen -f -- $cur ) )
				return 0
				;;

			*)
				complete_options='\
					-r --revision\
					-t --target'
				;;
		esac
		;;

	status)
		complete_options='\
			-f --force-checksum'
		;;

	up)
		complete_options='\
			-f --force-checksum'
		;;

	watch)
		case "${prev}" in
			--conflict-strategy|-C) 
				complete_words="$CONFLICT_STRATEGIES"
				;;

			*)
				complete_options='\
					-i --interval\
					-s --delay\
					-W --no-watcher\
					-a --announce\
					-N --no-announcements\
					-f --force-checksum\
					-C --conflict-strategy\
					-A --no-apply'
				;;
		esac
		;;			
	
	*)
		case "${prev}" in
			--localdir|-l)
				compopt -o nospace
				COMPREPLY=( $( compgen -d -S "/" -- $cur ) )

				return 0
				;;

			*)
				complete_words='\
					cleanup\
					connect\
					down\
					genlink\
					init\
					ls\
					ls-remote\
					plugin\
					restore\
					status\
					up\
					watch'

				complete_options='\
					-l --localdir\
					-d --debug\
					-h --help\
					-v -vv\
					--print'
				;;
		esac
		;;
	esac

	# Either display words or options, depending on the user input	
	if [[ $cur == -* ]]; then
		COMPREPLY=( $( compgen -W "$complete_options" -- $cur ))
	
	else 
		COMPREPLY=( $( compgen -W "$complete_words" -- $cur ))
	fi

	return 0
}

## Helper functions ###

# Determines the first non-option word of the command line. This
# is usually the command; Requires: $COMP_WORDS
_sy_get_firstword() {
	local firstword i

	firstword=
	for ((i = 1; i < ${#COMP_WORDS[@]}; ++i)); do
		if [[ ${COMP_WORDS[i]} != -* ]]; then
			firstword=${COMP_WORDS[i]}
			break
		fi
	done

	echo $firstword
}

# Determines the last non-option word of the command line. This
# is usally a sub-command; Requires: $COMP_WORDS, $cur
_sy_get_lastword() {
	local lastword i

	lastword=
	for ((i = 1; i < ${#COMP_WORDS[@]}; ++i)); do
		if [[ ${COMP_WORDS[i]} != -* ]] && [[ -n ${COMP_WORDS[i]} ]] && [[ ${COMP_WORDS[i]} != $cur ]]; then
			lastword=${COMP_WORDS[i]}
		fi
	done

	echo $lastword
}

## Define bash completions ###

complete -F _syncany sy
complete -F _syncany syncany
