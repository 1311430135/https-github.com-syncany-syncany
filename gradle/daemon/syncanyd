#!/bin/sh
 
set -e

case "`uname`" in
  Darwin* )
    darwin=true
    ;;
esac
 
NAME=syncanyd
APPDIR=~/.config/syncany
CONTROLFILE=$APPDIR/daemon.ctrl
PIDFILE=$APPDIR/daemon.pid
LOGDIR=$APPDIR/logs
LOGFILE=$LOGDIR/daemon.log

if [ $darwin ]; then
	DAEMON=$(dirname $(greadlink -f "$0"))/syncany
else
	DAEMON=$(dirname $(readlink -f "$0"))/syncany
fi

DAEMON_OPTS="--log=$LOGFILE daemon"
 
export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

mkdir -p $APPDIR
mkdir -p $LOGDIR

get_pid() {
	if [ -e $PIDFILE ]; then
		echo $(cat $PIDFILE)
	else
		echo -1
	fi
}

process_running() {
	ID=$(get_pid)
	if [ $ID -eq -1 ]; then
		echo 0
	elif [ -n $(ps -p$ID -opid=) ]; then
		echo 1
	else
		echo 0
	fi	
}

start() {
	RUNNING=$(process_running)
	
	echo "Starting daemon: "
	
	if [ $RUNNING -eq 1 ]; then
		echo "$NAME already running (pid $PID)"
	else
		nohup $DAEMON $DAEMON_OPTS > /dev/null 2>&1 &
		
		PID=-1
		TRIES=10
		
		while [ $RUNNING -eq 0 -a $TRIES -gt 0 ]; do
			RUNNING=$(process_running)
			echo "."
		
			PID=$(get_pid)
			TRIES=$(($TRIES-1))
			sleep 1
		done
		
		if [ $TRIES -eq 0 ]; then
			echo " Failed to start process. EXITING."
			echo "Failed command line: $ $DAEMON $DAEMON_OPTS"
			exit 2
		fi
		
		echo " $NAME (pid $PID)."
	fi
}

stop() {
	RUNNING=$(process_running)

	echo "Stopping daemon: "
	
	if [ $RUNNING -eq 0 ]; then
		echo "$NAME not running"
	else
		echo "shutdown" >> $CONTROLFILE
		
		TRIES=10
		while [ $RUNNING -eq 1 -a $TRIES -gt 0 ]; do
			RUNNING=$(process_running)
			echo "."
		
			TRIES=$(($TRIES-1))
			sleep 1
		done
		
		if [ $TRIES -eq 0 ]; then
			echo " Failed to stop process $PID. Try 'force-stop'. EXITING."
			exit 3
		fi
		
		echo " $NAME stopped."
	fi
}

force_stop() {
	RUNNING=$(process_running)

	echo "Force-stopping daemon: "

	if [ $RUNNING -eq 0 ]; then
		echo "$NAME not running"
	else
		kill -9 $PID
		
		RUNNING=$(process_running)
		
		sleep 5
			
		RUNNING=$(process_running)
		if [ $RUNNING -eq 1 ]; then
			echo "Failed to kill -9 $PID. EXITING."
		else 
			rm $PIDFILE 2> /dev/null
			rm $CONTROLFILE 2> /dev/null

			echo "Killed $NAME (pid $PID)."
		fi
	fi
}


status() {
	echo -n "Checking daemon: "$NAME
	
	if [ ! -e /proc/$PID ]; then
		echo " not running"
	else
		echo " running (pid $PID)."
	fi
}

reload() {
	echo -n "Reloading daemon: "$NAME
	
	if [ ! -e /proc/$PID ]; then
		echo " not running"
	else
		echo "reload" >> $CONTROLFILE
		echo "."
	fi
}

# Run main script
PID=$(get_pid)

case "$1" in
start)
	start
	;;
stop)
	stop
	;;
force-stop)
	force_stop
	;;
status)
	status
	;;
reload)
	reload
	;;
restart)
	stop	
	start
	;;
*)
	echo "Usage: "$1" (start|stop|reload|restart|status|force-stop)"
	exit 1
esac
 
exit 0