// Packaging ///////////////////////////////////////////////////////////////////

task debianClean(type: Delete) {
	delete 'build/debian'	
}

task debianPrepare(dependsOn: [installApp, debianClean]) {
	String debianApplicationVersionFull = "${applicationVersionFull}".replaceAll("-", "~")
	
	doLast {
		copy {
			from rootProject.files("build/install/syncany") 
			into rootProject.file("build/debian/syncany")
			exclude("**/*.bat")
		}
	
		copy {
			from rootProject.files("build/install/syncany/LICENSE.md") 
			into rootProject.file("build/debian/syncany/debian")
			rename("LICENSE.md", "copyright")
		}

		copy {
			from rootProject.files("gradle/debian/debian") 
			into rootProject.file("build/debian/syncany/debian")
		}
	
		exec {
			workingDir rootProject.file("gradle/debian")
			commandLine "./makechangelog.pl", "${debianApplicationVersionFull}"
		}
	}
}

task ppaBuild(dependsOn: debianPrepare) {
	doLast {
		exec {
			workingDir rootProject.file("gradle/debian")
			commandLine "./debuild-signed.sh"
		}
	}
}

task ppa(dependsOn: ppaBuild) {
	doLast {
		exec {
			workingDir rootProject.file("gradle/debian")
			commandLine "./dput-ppa.sh"
		}
	}
}

task debian(dependsOn: debianPrepare) {
	doLast {
		exec {
			workingDir rootProject.file("build/debian/syncany")
			commandLine "debuild -i -us -uc -b".split()
		}
	}
}
