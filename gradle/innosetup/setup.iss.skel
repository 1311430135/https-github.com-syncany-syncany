; Syncany Inno Setup SKELETON Script
;
; PLEASE NOTE:
;
; 1. This script is a SKELETON and is meant to be parsed by the Gradle 
;    task "innosetup" before handing it to the Inno Setup compiler (ISCC)
;
; 2. All VARIABLES with a dollar sign and curly brackets are replaced
;    by Gradle, e.g. "applicationVersion" below
;
; 3. The script is COPIED to build/innosetup before its run,
;    so all relative paths refer to this path!
;
; 4. All BACKSLASHES must be escaped 
;

[Setup]
AppName=Syncany
AppId=Syncany
AppVersion=${applicationVersionFull}
AppVerName=Syncany ${applicationVersion}
AppPublisher=Philipp Heckel
AppPublisherURL=https://www.syncany.org/
AppCopyright=Copyright (C) 2011-2014 Philipp Heckel

DefaultDirName={pf}\\Syncany
DefaultGroupName=Syncany
PrivilegesRequired=none
DisableProgramGroupPage=yes
UninstallDisplayIcon={uninstallexe}
ChangesEnvironment=yes

SourceDir=..\\install\\syncany
OutputDir=..\\..\\innosetup
OutputBaseFilename=syncany-${applicationVersionFull}

SetupIconFile=..\\..\\innosetup\\setup-icon.ico
WizardImageFile=..\\..\\innosetup\\setup-left.bmp
WizardSmallImageFile=..\\..\\innosetup\\setup-top.bmp
InfoBeforeFile=..\\..\\innosetup\\setup-info-before.rtf
InfoAfterFile=..\\..\\innosetup\\setup-info-after.rtf

[Files]
Source: "*"; DestDir: "{app}"
Source: "bin\\*"; DestDir: "{app}\\bin"; Excludes: "syncany,sy"
Source: "lib\\*"; DestDir: "{app}\\lib"

[Tasks]
Name: modifypath; Description: Add Syncany to PATH environment variable (recommended)
Name: setjavahome; Description: Set JAVA_HOME environment variable if not set (recommended)

[Icons]
Name: "{group}\\Syncany Quick How-To"; Filename: "https://www.syncany.org/r/howto"
Name: "{group}\\Syncany User Guide and Wiki"; Filename: "https://www.syncany.org/r/wiki"
Name: "{group}\\Uninstall Syncany"; Filename: "{uninstallexe}"

[Code]

// 1. Set JAVA_HOME env. variable ///////////

const 
  ModPathName = 'modifypath'; 
  ModPathType = 'user'; 
  SetJavaHomeTaskName = 'setjavahome';

var
  JavaHome: String;
  JavaHomeSet: Boolean;
  RegRootSearchPaths: TArrayOfString;
  RegRootSearchPathsLimitMemory: TArrayOfBoolean;
  LimitMemory: Boolean;

function GetJavaHomeForRegPath(RegRootKey: Integer; RegRootPath: String): String;
var 
  TempJavaHome, TempJavaVersion: String;
begin
  Result := '';
    
  if RegValueExists(RegRootKey, RegRootPath, 'CurrentVersion') then begin
    RegQueryStringValue(RegRootKey, RegRootPath, 'CurrentVersion', TempJavaVersion);
      
    if RegValueExists(RegRootKey, RegRootPath + '\\' + TempJavaVersion, 'JavaHome') then begin
      RegQueryStringValue(RegRootKey, RegRootPath + '\\' + TempJavaVersion, 'JavaHome', TempJavaHome);
          
      Result := TempJavaHome;
    end        
  end
end;

function InitializeSetup(): Boolean;
var 
  RegRootKey, i: Integer;
  RegRootPath, RegRootJavaHome: String;  
begin
  // Search paths for the Java installation
  SetArrayLength(RegRootSearchPaths, 4); 
  RegRootSearchPaths[0] := 'SOFTWARE\\JavaSoft\\Java Development Kit';
  RegRootSearchPaths[1] := 'SOFTWARE\\JavaSoft\\Java Runtime Environment'; 
  RegRootSearchPaths[2] := 'SOFTWARE\\Wow6432Node\\JavaSoft\\Java Development Kit'; 
  RegRootSearchPaths[3] := 'SOFTWARE\\Wow6432Node\\JavaSoft\\Java Runtime Environment'; 

  // Limit memory due to 32-bit Java on 64-bit system (see issue #222)
  // The values correspond to the paths above.
  SetArrayLength(RegRootSearchPathsLimitMemory, 4);
  RegRootSearchPathsLimitMemory[0] := False;
  RegRootSearchPathsLimitMemory[1] := False;
  RegRootSearchPathsLimitMemory[2] := True;
  RegRootSearchPathsLimitMemory[3] := True;

  // Registry root depending on 32/64 bit system
  if IsWin64 then begin
    RegRootKey := HKLM64;
  end
  else begin
    RegRootKey := HKLM;
  end;
  
  // Find JAVA_HOME and memory limit (32-bit Java on 64-bit Windows)
  JavaHome := GetEnv('JAVA_HOME');
  
  if JavaHome = '' then begin
    // JAVA_HOME already set, now only find the memory limit

    JavaHomeSet := True;
    Result := True;

    for i := 0 to GetArrayLength(RegRootSearchPaths)-1 do begin
      RegRootJavaHome := GetJavaHomeForRegPath(RegRootKey, RegRootSearchPaths[i]);

      if RegRootJavaHome = JavaHome then begin
        LimitMemory := RegRootSearchPathsLimitMemory[i];
      end
    end

    Log('JAVA_HOME is already set: ' + JavaHome);
  end
  else begin
    // JAVA_HOME not set, find by trying all registry keys above
    JavaHomeSet := False;
    Result := False;

    for i := 0 to GetArrayLength(RegRootSearchPaths)-1 do begin
      RegRootPath := GetJavaHomeForRegPath(RegRootKey, RegRootSearchPaths[i]);
      LimitMemory := RegRootSearchPathsLimitMemory[i];
       
      if RegRootPath <> '' then begin
        Result := True;
        break;
      end
    end

    if Result = False then begin
      MsgBox('Java is not installed on your computer.'#13'Please install Java from java.com try again.', MbError, Mb_Ok);
    end

    Log('JAVA_HOME not set; will be set to: ' + JavaHome);
  end
end;

procedure SetJavaHome();
begin
  if not JavaHomeSet then begin
    Log('Setting JAVA_HOME: ' + JavaHome);
    RegWriteStringValue(HKEY_CURRENT_USER, 'Environment', 'JAVA_HOME', JavaHome);
  end
end;

// 2. Set PATH variable (if ticked)  ////////

function ModPathDir(): TArrayOfString; 
begin
  setArrayLength(Result, 1) 
  Result[0] := ExpandConstant('{app}\\bin'); 
end; 
        
#include "modpath.iss"

// 3. Write memory limit file (on post install) ////////

procedure WriteMemoryLimitFile();
begin
  if LimitMemory then begin
    Log('Limit memory enabled; writing to ' + ExpandConstant('{userappdata}\\Syncany\\java.properties'));
    SaveStringToFile(ExpandConstant('{userappdata}\\Syncany\\java.properties'), 'org.syncany.limit-memory=1300M', false);           
  end
end;

// 4. Trigger post-install (taken from modpath.iss) /////////

procedure CurStepChanged(CurStep: TSetupStep);
begin
	if CurStep = ssPostInstall then begin
		if IsTaskSelected(ModPathName) then begin
			ModPath(); // In 'modpath.iss', calls 'ModPathDir()'
    end

    if IsTaskSelected(SetJavaHomeTaskName) then begin
			SetJavaHome();
    end

    WriteMemoryLimitFile();
  end
end;
