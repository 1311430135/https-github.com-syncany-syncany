import java.io.File;

apply plugin: 'application'

mainClassName = "org.syncany.Syncany"
String osName = System.getProperty("os.name").toLowerCase();

dependencies {
	compile			project(':syncany-lib')
	compile			project(':syncany-plugin-ftp')
	compile			project(':syncany-plugin-rest')    
	compile			"net.sf.jopt-simple:jopt-simple:4.5"      
   	
	testCompile		project(path: ':syncany-lib', configuration: 'tests')
	testCompile		"junit:junit:4.3"   	      
}


// Application Plugin Settings and Hooks ///////////////////////////////////////	

startScripts {
	defaultJvmOpts = [ '-Xmx1024m', '-Dfile.encoding=utf-8' ]
	
	doLast {
		def wFile = file getWindowsScript()
		def uFile = file getUnixScript()
		
		wFile.text = wFile.text.replace('set CLASSPATH=', 'set CLASSPATH=%APP_HOME%\\lib\\*;')
		uFile.text = uFile.text.replace('CLASSPATH=$APP_HOME', 'CLASSPATH=$APP_HOME/lib/*:$APP_HOME')
	}
}

applicationDistribution.from("${rootProject.projectDir}/") {
	include "README.md", "LICENSE.md"
}


// CLI-specific Tasks //////////////////////////////////////////////////////////

task fakeinstall(dependsOn: ['fakeuninstall']) << {
	// Do not depend on :syncany-cli:installApp to avoid permission issues when 
	// running fakeinstall as 'root'; manually calling installApp required
	
	if (osName.startsWith('windows')){
		copy {
			from '../gradle/windows/syncany.bat'
			into System.getenv()['windir']
			expand(appBinary: "${buildDir}/install/syncany-cli/bin/syncany-cli.bat")
		}
	}
	else{
    		ant.symlink(resource: "${buildDir}/install/syncany-cli/bin/syncany-cli", link: "/usr/local/bin/syncany")
    		ant.symlink(resource: "${buildDir}/install/syncany-cli/bin/syncany-cli", link: "/usr/local/bin/sy")
	}
}

task fakeuninstall << {
	if (osName.startsWith('windows')){
		new File(System.getenv()['windir'] + "/syncany.bat").delete()
	}
	else{
   		new File("/usr/local/bin/syncany").delete()
		new File("/usr/local/bin/sy").delete()
	}
}

task(runCli, dependsOn: 'classes', type: JavaExec) {
	main = 'org.syncany.Syncany'
	classpath = sourceSets.main.runtimeClasspath
}	
